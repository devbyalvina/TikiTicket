# github repository Actions 페이지에 나타낼 이름
name: Push CD

# event trigger
on:
  push:
    branches:
      - main
      - develop

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:

    ## jdk setting
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin' # https://github.com/actions/setup-java

    ## gradle caching
    - name: Gradle Caching
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # ## create application-dev.properties
    # - name: make application-dev.properties
    #   if: contains(github.ref, 'develop')
    #   run: |
    #     cd ./src/main/resources
    #     touch ./application-dev.properties
    #     echo "${{ secrets.PROPERTIES_DEV }}" > ./application-dev.properties
    #   shell: bash

    # ## create application-prod.properties
    # - name: make application-prod.properties
    #   if: contains(github.ref, 'main')
    #   run: |
    #       cd ./src/main/resources
    #       touch ./application-prod.properties
    #       echo "${{ secrets.PROPERTIES_PROD }}" > ./application-prod.properties
    #   shell: bash

    ## gradle build
    - name: Build with Gradle
      run: ./gradlew build -x test -x ktlintCheck -x ktlintTestSourceSetCheck -x ktlintMainSourceSetCheck -x ktlintKotlinScriptCheck

    ## docker build & push to production
    - name: Docker build & push to prod
      if: contains(github.ref, 'main')
      run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile-prod -t ${{ secrets.DOCKER_REPO }}/dotoriham-prod .
          docker push ${{ secrets.DOCKER_REPO }}/dotoriham-prod

    ## docker build & push to develop
    - name: Docker build & push to dev
      if: contains(github.ref, 'develop')
      run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile-dev -t ${{ secrets.DOCKER_REPO }}/dotoriham-dev .
          docker push ${{ secrets.DOCKER_REPO }}/dotoriham-dev

  ## time
  current-time:
    needs: CI-CD
    runs-on: ubuntu-latest
    steps:
      - name: Get Current Time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH:mm:ss
          utcOffset: "+09:00" # 기준이 UTC이기 때문에 한국시간인 KST를 맞추기 위해 +9시간 추가

      - name: Print Current Time
        run: echo "Current Time=${{steps.current-time.outputs.formattedTime}}" # current-time 에서 지정한 포맷대로 현재 시간 출력
        shell: bash
